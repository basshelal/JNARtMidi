package com.github.basshelal.jnartmidi.lib;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * ! \brief Wraps an RtMidi object for C function return statuses.<br>
 * <i>native declaration : rtmidi_c.h:7</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
@Structure.FieldOrder({"ptr", "data", "ok", "msg"})
public class RtMidiWrapper extends Structure {
    /**
     * C type : void*
     */
    public Pointer ptr;
    /**
     * C type : void*
     */
    public Pointer data;
    public byte ok;
    /**
     * C type : const char*
     */
    public Pointer msg;

    public RtMidiWrapper() {
        super();
    }

    /**
     * @param ptr  C type : void*<br>
     * @param data C type : void*<br>
     * @param msg  C type : const char*
     */
    public RtMidiWrapper(Pointer ptr, Pointer data, byte ok, Pointer msg) {
        super();
        this.ptr = ptr;
        this.data = data;
        this.ok = ok;
        this.msg = msg;
    }

    public RtMidiWrapper(Pointer peer) {
        super(peer);
    }

    public static class ByReference extends RtMidiWrapper implements Structure.ByReference {

    }

    public static class ByValue extends RtMidiWrapper implements Structure.ByValue {

    }
}

